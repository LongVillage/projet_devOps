#############################################
# .gitlab-ci.yml
#############################################

stages:
  - build
  - infra
  - deploy

# On suppose que tu as dÃ©fini ces variables dans GitLab CI/CD > Settings > Variables :
#  AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION
#  AWS_ECR_REGISTRY (ex: 131674823919.dkr.ecr.eu-west-3.amazonaws.com)
#  etc.

build-docker:
  stage: build
  image: docker:20.10.16
  services:
    - docker:dind
  variables:
    DOCKER_HOST: "tcp://docker:2375/"
  script:
    - echo "test"
    - echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
    - echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
    - apk update && apk add --no-cache python3 py3-pip
    - pip install awscli
    - echo "=== Build & push Django container ==="
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY

    # Build Django
    - cd services/predict-model/Django
    - docker build -t django-crypto:latest .
    - docker tag django-crypto:latest $AWS_ECR_REGISTRY/django-crypto:latest
    - docker push $AWS_ECR_REGISTRY/django-crypto:latest
    - cd ../../..
    - echo "=== Build & push Streamlit container ==="
    - cd services/predict-model/streamlit
    - docker build -t streamlit-crypto:latest .
    - docker tag streamlit-crypto:latest $AWS_ECR_REGISTRY/streamlit-crypto:latest
    - docker push $AWS_ECR_REGISTRY/streamlit-crypto:latest
    - cd ../..
  only:
    - main

infra:
  stage: infra
  image: hashicorp/terraform:1.3.9
  script:
    - echo "=== Terraform init/plan/apply ==="
    - cd services/predict-model/terraform
    - terraform init
    - terraform plan -out=tfplan
    - terraform apply -auto-approve tfplan
  artifacts:
    paths:
      - services/predict-model/terraform/terraform.tfstate
    expire_in: 1 week
  only:
    - main

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - |
      # Tout est ici dans un unique bloc Shell

      echo "=== Configure kubectl to access EKS (myekscrypto) ==="
      aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name myekscrypto

      echo "=== Apply all K8s manifests (ingress, deployment, service) ==="
      kubectl apply -f services/predict-model/k8s/

      echo "Wait 30s for ALB creation"
      sleep 30

      echo "=== Retrieve ALB DNS from Ingress ==="
      ALB_DNS=$(kubectl get ingress crypto-ingress -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
      echo "ALB DNS is $ALB_DNS"

      echo "=== Update ConfigMap with new STREAMLIT_URL ==="
      sed -i 's|STREAMLIT_URL:.*|STREAMLIT_URL: "http://'"$ALB_DNS"'/streamlit"|g' services/predict-model/k8s/configmap.yaml
      kubectl apply -f services/predict-model/k8s/configmap.yaml

      echo "=== Restart Django deployment to reload env ==="
      kubectl rollout restart deployment django-deployment
      kubectl get pods
  dependencies:
    - infra
  only:
    - main
